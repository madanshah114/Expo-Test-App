trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    echo "test file." > $(Build.ArtifactStagingDirectory)/test.txt
  displayName: 'Create Text File'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/sample.zip'
    replaceExistingArchive: true
  displayName: 'Zip Text File'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/sample.zip'
    artifactName: 'test'
    publishLocation: 'Container'
    displayName: 'publish zip'

# jobs:
# - job: ExpoBuild
#   displayName: 'Expo Build Job'
#   steps:
#   - checkout: self

#   - task: NodeTool@0
#     inputs:
#       versionSource: 'spec'
#       versionSpec: '19.x'
#       checkLatest: true

#   - script: yarn install
#     displayName: 'Install dependencies'

#   - script: |
#       npm install -g pnpm
#       pnpm version
#     displayName: 'Install pnpm'

#   - script: |
#       pnpm run lint
#     displayName: 'Run lint'

#   - script: |
#       npm install -g eas-cli@latest
#       yarn global add eas-cli
#     displayName: 'Install EAS CLI'

#   - script: |
#       if [ "$(Build.Reason)" == "PullRequest" ]; then
#         EXPO_TOKEN=$(EXPO_TOKEN) eas build --platform android --profile preview --non-interactive
#       else
#         EXPO_TOKEN=$(EXPO_TOKEN) eas build --platform android --profile production --non-interactive
#       fi
#     displayName: 'Build with EAS CLI'

#   - task: CopyFiles@2
#     inputs:
#       SourceFolder: '$(System.DefaultWorkingDirectory)/build'
#       Contents: '**/*.apk'  # Adjust the pattern according to your artifact's extension
#       TargetFolder: '$(Build.ArtifactStagingDirectory)'

#   - task: PublishBuildArtifacts@1
#     inputs:
#       PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#       ArtifactName: 'android-build'
#       publishLocation: 'Container'
    
